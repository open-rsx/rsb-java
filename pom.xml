<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- General project settings. -->
    <groupId>rsb</groupId>
    <artifactId>rsb</artifactId>
    <version>0.13-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>RSB</name>
    <url>https://code.cor-lab.org/projects/rsb/</url>

    <description>The Robotics Service Bus (RSB) is a message-oriented, event-driven middleware aiming at scalable integration of robotics systems in diverse environments. Being fundamentally a bus architecture, RSB structures heterogeneous systems of service providers and consumers using broadcast communication over a hierarchy of logically unified channels instead of a large number of point-to-point connections. Nevertheless RSB comes with a collection of communication patterns and other tools for structuring communication, but does not require a particular functional or decomposition style.</description>

    <organization>
        <name>CoR-Lab</name>
        <url>http://www.cor-lab.org/</url>
    </organization>

    <scm>
        <developerConnection>scm:git:https://code.cor-lab.org/git/rsb.git.java</developerConnection>
        <url>https://code.cor-lab.org/projects/rsb/repository/rsb-java</url>
    </scm>

    <!-- Properties that can be overridden using e.g. 'mvn -Dspread.daemon=/some/path 
        package'. -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <pbuf.protopath>${env.prefix}/share/rsbprotocol</pbuf.protopath>
        <pbuf.protoc>/usr/bin/protoc</pbuf.protoc>
        <pbuf.version>2.4.1</pbuf.version>
        <pbuf.outpath>target/generated-protocol</pbuf.outpath>
        <spread.daemon>/usr/sbin/spread</spread.daemon>
        <target.java.version>1.6</target.java.version>
        <plugin.checkstyle.version>2.15</plugin.checkstyle.version>
        <plugin.pmd.version>3.4</plugin.pmd.version>
        <plugin.javadoc.version>2.10.3</plugin.javadoc.version>
        <plugin.jacoco.version>0.7.5.201505241946</plugin.jacoco.version>
        <failOnStyleError>true</failOnStyleError>
    </properties>

    <build>
        <!-- Set up the source and test source folders. -->
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <!-- Use the source dir also for resources. -->
        <resources>
            <resource>
                <directory>src</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <!-- Use the test dir also for test resources. -->
        <testResources>
            <testResource>
                <directory>test</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>test/logging.properties</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
            <!-- Check the availability of different external dependencies. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>enforce-external-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <!-- This makes it fail when the first check 
                                fails. -->
                            <failFast>true</failFast>
                            <rules>
                                <requireJavaVersion>
                                    <!-- This defines the minimum version. -->
                                    <version>${target.java.version}</version>
                                </requireJavaVersion>
                                <requireFilesExist>
                                    <message>Could not find 'gitversion'
                                        and 'gitbranch' files,
                                        please run
                                        mvnprep.sh before building with
                                        Maven.</message>
                                    <files>
                                        <file>gitversion</file>
                                        <file>gitbranch</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>Google Protocol Buffers
                                        compiler not found at
                                        '${pbuf.protoc}'. Please set
                                        pbuf.protoc.</message>
                                    <files>
                                        <file>${pbuf.protoc}</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>RSB protocol property
                                        pbuf.protopath does not point to
                                        a valid installation of
                                        RSBProtocol at
                                        '${pbuf.protopath}'</message>
                                    <files>
                                        <file>${pbuf.protopath}/rsb/protocol/Notification.proto</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>Spread daemon not found at
                                        '${spread.daemon}'. Please
                                        set
                                        spread.daemon.</message>
                                    <files>
                                        <file>${spread.daemon}</file>
                                    </files>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compiler settings -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${target.java.version}</source>
                    <target>${target.java.version}</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <!-- Load the last git commit from gitversion. -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <git.version.file>gitversion</git.version.file>
                            </properties>
                            <source>
                                def file = new
                                File(project.properties["git.version.file"])
                                commit =
                                file.getText().replaceFirst(/^.*-/,"")
                                project.properties["git.commit"] =
                                commit
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Settings for the generated JAR. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <!-- exclude examples from the jar file -->
                    <excludes>
                        <include>*.class</include>
                        <include>tutorial/**/*.*</include>
                    </excludes>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <!-- <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries> -->
                        </manifest>
                        <manifestEntries>
                            <Last-Commit>${git.commit}</Last-Commit>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- Different steps realized using ant. -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- Generate protobuf classes. -->
                    <execution>
                        <id>generate-protocol</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${pbuf.outpath}" />
                                <apply failonerror="true"
                                    executable="${pbuf.protoc}">
                                    <arg value="--java_out=${pbuf.outpath}" />
                                    <arg
                                        value="--proto_path=${pbuf.protopath}" />
                                    <fileset dir="${pbuf.protopath}"
                                        includes="**/*.proto" />
                                </apply>
                                <apply failonerror="true"
                                    executable="${pbuf.protoc}">
                                    <arg value="--java_out=${pbuf.outpath}" />
                                    <arg
                                        value="--proto_path=${project.basedir}/examples/tutorial/protocol" />
                                    <fileset
                                        dir="examples/tutorial/protocol"
                                        includes="*.proto" />
                                </apply>
                            </tasks>

                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <!-- Start spread before running tests. -->
                    <execution>
                        <id>start-spread</id>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <tasks>
                                <taskdef
                                    resource="net/sf/antcontrib/antcontrib.properties"
                                    classpathref="maven.plugin.classpath" />
                                <if>
                                    <not>
                                        <equals arg1="${skipTests}"
                                            arg2="true" />
                                    </not>
                                    <then>
                                        <forget>
                                            <exec executable="${spread.daemon}">
                                                <arg
                                                    line="-n localhost -c ${project.basedir}/etc/spread.conf" />
                                            </exec>
                                        </forget>

                                        <sleep seconds="10" />
                                    </then>
                                </if>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- All this is needed to get ant-contrib in the ant
                        task above. -->
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Add the spread and protobuf-generated sources to the build. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>spread-src</source>
                                <source>examples</source>
                                <source>${pbuf.outpath}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Jacoco coverage report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate checkstyle warnings on the command line during compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/codecheck/checkstyle.xml</configLocation>
                    <propertyExpansion>config_loc=${project.basedir}/codecheck</propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <consoleOutput>true</consoleOutput>
                    <violationSeverity>warning</violationSeverity>
                    <failOnViolation>${failOnStyleError}</failOnViolation>
                    <sourceDirectory>${project.basedir}/src</sourceDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle-validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate PMD warnings on the command line during compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${plugin.pmd.version}</version>
                <configuration>
                    <targetJdk>${target.java.version}</targetJdk>
                    <rulesets>
                        <ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
                    </rulesets>
                    <excludeRoots>
                        <excludeRoot>${project.basedir}/target/generated-protocol</excludeRoot>
                        <excludeRoot>${project.basedir}/spread-src</excludeRoot>
                        <excludeRoot>${project.basedir}/examples</excludeRoot>
                    </excludeRoots>
                    <failOnViolation>${failOnStyleError}</failOnViolation>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>pmd-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Copied from reporting section because the documented
                 inheritance of options from the reporting section does not
                 work.
                 Cf. https://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_reporting_Tag_VS_build_Tag
                 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugin.javadoc.version}</version>
                <configuration>
                    <show>protected</show>
                    <excludePackageNames>spread:tutorial.protobuf</excludePackageNames>
                    <quiet>true</quiet>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.3</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-antrun-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.3,)
                                        </versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.6.3.201306030806,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.gmaven
                                        </groupId>
                                        <artifactId>
                                            gmaven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.4,)
                                        </versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>

            <!-- Jacoco coverage report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>spread/**/*.*</exclude>
                        <exclude>tutorial/**/*.*</exclude>
                        <exclude>rsb/protocol/**/*Type*.*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Generate cross-referenced HTML for the sources. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>

            <!-- Generate Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugin.javadoc.version}</version>
                <configuration>
                    <show>protected</show>
                    <excludePackageNames>spread:tutorial.protobuf</excludePackageNames>
                    <quiet>true</quiet>
                </configuration>
            </plugin>

            <!-- Also generate a PMD report. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${plugin.pmd.version}</version>
                <configuration>
                    <targetJdk>${target.java.version}</targetJdk>
                    <rulesets>
                        <ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
                    </rulesets>
                    <excludeRoots>
                        <excludeRoot>${project.basedir}/target/generated-protocol</excludeRoot>
                        <excludeRoot>${project.basedir}/spread-src</excludeRoot>
                        <excludeRoot>${project.basedir}/examples</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>

            <!-- Checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/codecheck/checkstyle.xml</configLocation>
                    <propertyExpansion>config_loc=${project.basedir}/codecheck</propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <sourceDirectory>${project.basedir}/src</sourceDirectory>
                </configuration>
            </plugin>

            <!-- Just so maven doesn't complain about a missing version. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </reporting>

    <!-- All direct dependencies need to be specified here. -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>[${pbuf.version}]</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>doclint-java8-disable</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${plugin.javadoc.version}</version>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${plugin.javadoc.version}</version>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>citec</id>
            <name>CIT-EC Repository</name>
            <url>https://repo.cit-ec.uni-bielefeld.de/content/repositories/public-releases/</url>
        </repository>
        <snapshotRepository>
            <id>citec</id>
            <name>CIT-EC Repository</name>
            <url>https://repo.cit-ec.uni-bielefeld.de/content/repositories/public-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
