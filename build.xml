<project name="RSBJava" default="dist" basedir=".">
	<description>
        Build file for Java Bindings of Robotics Service Bus Middleware
    </description>

	<!-- set global properties for this build -->
	<property name="src" location="spread-4.0.0;src;rsb-xml" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="test.dir" location="build/test" />
	<property name="lib.dir" location="lib" />
	<property file="build.properties" />
	<property environment="env" />
	<property name="install.dir" location="${env.prefix}/lib/java" />

	<!-- set up ant-contrib -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${lib.dir}/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>


	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${build.dir}/test" />
		<!-- Create library classpath -->
		<path id="compile.classpath">
			<pathelement path="${classpath}" />
			<pathelement location="${pbuf.lib}/" />
			<pathelement location="${xom.lib}/" />
		</path>
		<!-- Create test classpath -->
		<path id="test.classpath">
			<path refid="compile.classpath" />
			<pathelement location="${lib.dir}/junit4-4.8.1.jar" />
			<pathelement location="${lib.dir}/hamcrest-core.jar" />
			<pathelement location="${build.dir}/classes" />
			<pathelement location="${test.dir}" />
		</path>
	</target>

	<target name="protocol">
		<exec executable="${pbuf.protoc}">
			<arg value="--java_out=src" />
			<arg value="--proto_path=${pbuf.protopath}" />
			<arg value="${pbuf.protopath}/Attachment.proto" />
			<arg value="${pbuf.protopath}/Notification.proto" />
			<arg value="${pbuf.protopath}/introspection/PortStateChange.proto" />
		</exec>
	</target>

	<target name="compile" depends="init, protocol" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build.dir}/classes" debug="on" deprecation="on">
			<compilerarg value="-Xlint" />
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<target name="test-compile" depends="compile">
		<javac destdir="${test.dir}" includeAntRuntime="true" srcdir="test">
			<classpath refid="test.classpath" />
		</javac>
		<copy todir="${test.dir}">
			<fileset dir="test" excludes="**/*.java" />
		</copy>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}/lib" />

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist.dir}/lib/RSBJava-${DSTAMP}.jar" basedir="${build.dir}/classes" />
	</target>

	<target name="test" depends="test-compile" description="JUnit tests">
		<forget>
			<exec executable="${spread.daemon}">
				<arg line="-n localhost -c ./etc/spread.conf" />
			</exec>
		</forget>

		<waitfor maxwait="3" maxwaitunit="second" checkevery="100" checkeveryunit="millisecond">
			<socket server="localhost" port="4910" />
		</waitfor>
		<junit printsummary="yes" haltonfailure="yes">
			<formatter type="xml" />
			<formatter type="plain" usefile="false" />
			<classpath refid="test.classpath" />
			<batchtest fork="yes" todir="${dir.report.unittests.xml}">
				<fileset dir="test">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>


	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build.dir}" />
		<delete dir="src/rsb/protocol" />
		<delete dir="${test.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="install" depends="dist">
		<echo message="Installing to ${install.dir}." />
		<mkdir dir="${install.dir}" />
		<copy file="${dist.dir}/lib/RSBJava-${DSTAMP}.jar" todir="${install.dir}" />
		<symlink link="${install.dir}/RSBJava.jar" resource="${install.dir}/RSBJava-${DSTAMP}.jar" overwrite="true" />
	</target>
</project>

