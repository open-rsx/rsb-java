<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- General project settings. -->
    <parent>
        <groupId>rsb</groupId>
        <artifactId>rsb-java</artifactId>
        <version>0.13-SNAPSHOT</version>
    </parent>
    <artifactId>rsb</artifactId>
    <packaging>jar</packaging>

    <name>rsb-java</name>

    <properties>
        <test.configs>${project.basedir}/target/generated-test-config</test.configs>
    </properties>

    <build>
        <plugins>

            <!-- Check the availability of different external dependencies. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <id>enforce-external-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <!-- This makes it fail when the first check fails. -->
                            <failFast>true</failFast>
                            <rules>
                                <requireJavaVersion>
                                    <!-- This defines the minimum version. -->
                                    <version>${target.java.version}</version>
                                </requireJavaVersion>
                                <requireFilesExist>
                                    <message>
Could not find 'gitversion' and 'gitbranch' files, please run mvnprep.sh before building with Maven.
                                    </message>
                                    <files>
                                        <file>${project.basedir}/gitversion</file>
                                        <file>${project.basedir}/gitbranch</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>
Google Protocol Buffers compiler not found at '${pbuf.protoc}'. Please set pbuf.protoc.
                                    </message>
                                    <files>
                                        <file>${pbuf.protoc}</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>
RSB protocol property pbuf.protopath does not point to a valid installation of RSBProtocol at '${pbuf.protopath}'
                                    </message>
                                    <files>
                                        <file>${pbuf.protopath}/rsb/protocol/Notification.proto</file>
                                    </files>
                                </requireFilesExist>
                                <requireFilesExist>
                                    <message>
Spread daemon not found at '${spread.daemon}'. Please set spread.daemon.
                                    </message>
                                    <files>
                                        <file>${spread.daemon}</file>
                                    </files>
                                </requireFilesExist>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>${test.configs}/logging.properties</value>
                        </property>
                    </systemProperties>
                    <environmentVariables>
                        <RSB_TRANSPORT_SPREAD_PORT>${spread.port}</RSB_TRANSPORT_SPREAD_PORT>
                        <RSB_TRANSPORT_SOCKET_PORT>${socket.port}</RSB_TRANSPORT_SOCKET_PORT>
                    </environmentVariables>
                </configuration>
            </plugin>

            <!-- generate the protocol files -->
            <plugin>
                <groupId>com.google.protobuf.tools</groupId>
                <artifactId>maven-protoc-plugin</artifactId>
                <configuration>
                    <protoSourceRoot>${pbuf.protopath}</protoSourceRoot>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Load the last git commit from gitversion. -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <git.version.file>${project.basedir}/gitversion</git.version.file>
                            </properties>
                            <source>
def file = new File(project.properties["git.version.file"])
commit = file.getText().replaceFirst(/^.*-/,"")
project.properties["git.commit"] = commit
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Settings for the generated JAR. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- exclude examples from the jar file -->
                    <excludes>
                        <include>*.class</include>
                    </excludes>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Last-Commit>${git.commit}</Last-Commit>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>${project.basedir}/src/test/resources/spread.conf</include>
                        <include>${project.basedir}/src/test/resources/logging.properties</include>
                    </includes>
                    <replacements>
                        <replacement>
                            <token>@SPREAD_PORT@</token>
                            <value>${spread.port}</value>
                        </replacement>
                        <replacement>
                            <token>@LOGGING_DIR@</token>
                            <value>${project.basedir}/target</value>
                        </replacement>
                    </replacements>
                    <outputDir>${test.configs}</outputDir>
                    <preserveDir>false</preserveDir>
                </configuration>
            </plugin>

            <!-- Different steps realized using ant. -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- Start spread before running tests. -->
                    <execution>
                        <id>start-spread</id>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <tasks>
                                <taskdef
                                    resource="net/sf/antcontrib/antcontrib.properties"
                                    classpathref="maven.plugin.classpath" />
                                <if>
                                    <not>
                                        <equals arg1="${skipTests}"
                                            arg2="true" />
                                    </not>
                                    <then>
                                        <forget>
                                            <exec executable="${spread.daemon}">
                                                <arg line="-n localhost -c ${test.configs}/spread.conf" />
                                            </exec>
                                        </forget>

                                        <sleep seconds="10" />
                                    </then>
                                </if>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- All this is needed to get ant-contrib in the ant
                        task above. -->
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Jacoco coverage report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
                <configuration>
                    <append>false</append>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate checkstyle warnings on the command line during compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/codecheck/checkstyle.xml</configLocation>
                    <propertyExpansion>config_loc=${project.basedir}/codecheck</propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <consoleOutput>true</consoleOutput>
                    <violationSeverity>warning</violationSeverity>
                    <failOnViolation>${failOnStyleError}</failOnViolation>
                </configuration>
                <executions>
                    <execution>
                        <id>checkstyle-validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate PMD warnings on the command line during compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${plugin.pmd.version}</version>
                <configuration>
                    <targetJdk>${target.java.version}</targetJdk>
                    <rulesets>
                        <ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
                    </rulesets>
                    <excludeRoots>
                        <excludeRoot>${project.basedir}/target/generated-sources/protobuf/java</excludeRoot>
                    </excludeRoots>
                    <failOnViolation>${failOnStyleError}</failOnViolation>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>pmd-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Copied from reporting section because the documented
                 inheritance of options from the reporting section does not
                 work.
                 Cf. https://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_reporting_Tag_VS_build_Tag
                 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugin.javadoc.version}</version>
                <configuration>
                    <show>protected</show>
                    <excludePackageNames>spread</excludePackageNames>
                    <quiet>true</quiet>
                </configuration>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-antrun-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.3,)
                                        </versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.6.3.201306030806,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.codehaus.gmaven
                                        </groupId>
                                        <artifactId>
                                            gmaven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [1.4,)
                                        </versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>

            <!-- Jacoco coverage report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugin.jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>spread/**/*.*</exclude>
                        <exclude>rsb/protocol/**/*Type*.*</exclude>
                        <exclude>rsb/protocol/**/Package.*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Generate cross-referenced HTML for the sources. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>

            <!-- Generate Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugin.javadoc.version}</version>
                <configuration>
                    <show>protected</show>
                    <excludePackageNames>spread</excludePackageNames>
                    <quiet>true</quiet>
                </configuration>
            </plugin>

            <!-- Also generate a PMD report. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${plugin.pmd.version}</version>
                <configuration>
                    <targetJdk>${target.java.version}</targetJdk>
                    <rulesets>
                        <ruleset>${project.basedir}/codecheck/pmd-rules.xml</ruleset>
                    </rulesets>
                    <excludeRoots>
                        <excludeRoot>${project.basedir}/target/generated-sources/protobuf/java</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>

            <!-- Checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <configuration>
                    <configLocation>${project.basedir}/codecheck/checkstyle.xml</configLocation>
                    <propertyExpansion>config_loc=${project.basedir}/codecheck</propertyExpansion>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>

            <!-- Just so maven doesn't complain about a missing version. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </reporting>

</project>
